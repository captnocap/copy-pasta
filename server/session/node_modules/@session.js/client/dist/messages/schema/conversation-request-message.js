import { SignalService } from '@session.js/types/signal-bindings';
import { ContentMessage } from '../signal-message.js';
import { serializeProfile } from '../../profile/index.js';
// Request is always Approved
export class MessageRequestResponse extends ContentMessage {
    profileKey;
    profile;
    constructor(params) {
        super({
            timestamp: params.timestamp,
        });
        if (params.profile) {
            const profile = serializeProfile(params.profile);
            this.profile = profile.lokiProfile;
            this.profileKey = profile.profileKey;
        }
    }
    contentProto() {
        return new SignalService.Content({
            messageRequestResponse: this.messageRequestResponseProto(),
        });
    }
    messageRequestResponseProto() {
        return new SignalService.MessageRequestResponse({
            isApproved: true,
            profileKey: this.profileKey?.length ? this.profileKey : undefined,
            profile: this.profile,
        });
    }
}
