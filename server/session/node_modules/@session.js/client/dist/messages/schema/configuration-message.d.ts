/**
 *
 * THIS LEGACY PIECE OF SHIT IS DEPRECATED
 * DO NOT USE IT, USE SharedConfigMessage!!!
 *
 */
import { SignalService } from '@session.js/types/signal-bindings';
import { ContentMessage, type MessageParams } from '../signal-message.js';
interface ConfigurationMessageParams extends MessageParams {
    activeClosedGroups: Array<ConfigurationMessageClosedGroup>;
    activeOpenGroups: Array<string>;
    displayName: string;
    profilePicture?: string;
    profileKey?: Uint8Array;
    contacts: Array<ConfigurationMessageContact>;
}
export declare class ConfigurationMessage extends ContentMessage {
    readonly activeClosedGroups: Array<ConfigurationMessageClosedGroup>;
    readonly activeOpenGroups: Array<string>;
    readonly displayName: string;
    readonly profilePicture?: string;
    readonly profileKey?: Uint8Array;
    readonly contacts: Array<ConfigurationMessageContact>;
    constructor(params: ConfigurationMessageParams);
    contentProto(): SignalService.Content;
    protected configurationProto(): SignalService.ConfigurationMessage;
    private mapClosedGroupsObjectToProto;
    private mapContactsObjectToProto;
}
export declare class ConfigurationMessageContact {
    publicKey: Uint8Array;
    displayName: string;
    profilePictureURL?: string;
    profileKey?: Uint8Array;
    isApproved?: boolean;
    isBlocked?: boolean;
    didApproveMe?: boolean;
    constructor({ publicKey, displayName, profilePictureURL, profileKey, isApproved, isBlocked, didApproveMe, }: {
        publicKey: Uint8Array;
        displayName: string;
        profilePictureURL?: string;
        profileKey?: Uint8Array;
        isApproved?: boolean;
        isBlocked?: boolean;
        didApproveMe?: boolean;
    });
    toProto(): SignalService.ConfigurationMessage.Contact;
}
export declare class ConfigurationMessageClosedGroup {
    publicKey: Uint8Array;
    name: string;
    encryptionKeyPair: {
        privateKeyData: Uint8Array;
        publicKeyData: Uint8Array;
    };
    members: Array<string>;
    admins: Array<string>;
    constructor({ publicKey, name, encryptionKeyPair, members, admins, }: {
        publicKey: Uint8Array;
        name: string;
        encryptionKeyPair: {
            privateKeyData: Uint8Array;
            publicKeyData: Uint8Array;
        };
        members: Array<string>;
        admins: Array<string>;
    });
    toProto(): SignalService.ConfigurationMessage.ClosedGroup;
}
export {};
