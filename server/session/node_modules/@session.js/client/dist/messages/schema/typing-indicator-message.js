import * as Constants from '@session.js/consts';
import { SignalService } from '@session.js/types/signal-bindings';
import { ContentMessage } from '../signal-message.js';
export class TypingMessage extends ContentMessage {
    isTyping;
    typingTimestamp;
    constructor(params) {
        super({ timestamp: params.timestamp, identifier: params.identifier });
        this.isTyping = params.isTyping;
        this.typingTimestamp = params.typingTimestamp;
    }
    ttl() {
        return Constants.TTL_DEFAULT.TYPING_MESSAGE;
    }
    contentProto() {
        return new SignalService.Content({
            typingMessage: this.typingProto(),
        });
    }
    typingProto() {
        const ACTION_ENUM = SignalService.TypingMessage.Action;
        const action = this.isTyping ? ACTION_ENUM.STARTED : ACTION_ENUM.STOPPED;
        const finalTimestamp = this.typingTimestamp || Date.now();
        const typingMessage = new SignalService.TypingMessage();
        typingMessage.action = action;
        typingMessage.timestamp = finalTimestamp;
        return typingMessage;
    }
}
