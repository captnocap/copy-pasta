import { decryptAttachment } from '../attachments/decrypt.js';
import { RequestType } from '@session.js/types/network/request';
import { SessionCryptoError, SessionCryptoErrorCode } from '@session.js/errors';
export async function getFile(attachment) {
    if (attachment._key === undefined || attachment._digest === undefined) {
        throw new SessionCryptoError({ code: SessionCryptoErrorCode.MessageDecryptionFailed, message: 'Missing attachment key or digest' });
    }
    const fileBuffer = await this._request({
        type: RequestType.DownloadAttachment,
        body: { id: attachment.id }
    });
    const decryptedData = await decryptAttachment(fileBuffer, {
        size: attachment.size,
        keyBuffer: attachment._key,
        digestBuffer: attachment._digest
    });
    return new File([decryptedData], attachment.name || '', { type: attachment.metadata.contentType || 'application/octet-stream' });
}
